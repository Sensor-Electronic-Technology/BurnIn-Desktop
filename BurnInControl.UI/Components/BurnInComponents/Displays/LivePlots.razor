@using BurnInControl.HubDefinitions.Hubs
@using BurnInControl.Shared
@using BurnInControl.Shared.ComDefinitions
@using BurnInControl.UI.Data
@using BurnInControl.UI.Components.BurnInComponents.Displays.Plots
@using Microsoft.AspNetCore.SignalR.Client
@inject HubClient HubClient

<RadzenStack>
    <TemperaturePlot TempData="_tempPlotData" 
                     XAxisName="Time(hrs)" 
                     YAxisName="Temperature(C)" />
    <VoltageLiveView VoltageData="_voltagePlotData"
                     XAxisName="Time(hrs)"
                     YAxisName="Voltage(V)"/>
    <CurrentLivePlot CurrentData="_currentPlotData"
                     XAxisName="Time(hrs)"
                     YAxisName="Current(mA)"/>
</RadzenStack>

@code {
    private StationSerialData? _data;
    private Dictionary<string, List<TemperatureLiveData>> _tempPlotData=new();
    private Dictionary<string, List<VoltageData>> _voltagePlotData=new();
    private Dictionary<string, List<CurrentData>> _currentPlotData=new();

    private PlotAxisOptions _currentPlotOptions=new();
    private PlotAxisOptions _tempPlotOptions=new();
    private PlotAxisOptions _voltagePlotOptions = new();

    private bool _running = false;

    protected override Task OnInitializedAsync() {
        this.HubClient.StationHubConnection.On<StationSerialData>(StationHubConstants.Events.OnStationData, this.OnSerialComReceived);
        return base.OnInitializedAsync();
    }
    
    private Task OnSerialComReceived(StationSerialData data) {
        this._data = data;
        if (data.Running) {
            if(this._running==false) {
                this._running = true;
                this._tempPlotData?.Clear();
                this._voltagePlotData?.Clear();
                this._currentPlotData?.Clear();
                InitPlotOptions(data);
            }
            for (int i = 0; i < ControllerHardwareConstants.HEATER_COUNT; i++) {
                this._tempPlotData?[ControllerHardwareConstants.HeaterNames[i]].Add(new TemperatureLiveData() {
                    TempC = data.Temperatures[i],
                    TimeHrs = (double)data.ElapsedSeconds/ 3600,
                });
            }
            for (int i = 0; i < ControllerHardwareConstants.PROBE_COUNT; i++) {
                this._currentPlotData?[ControllerHardwareConstants.HeaterNames[i]].Add(new CurrentData() {
                    CurrentMa = data.Currents[i],
                    TimeHrs = (double)data.ElapsedSeconds/ 3600,
                });
                this._voltagePlotData?[ControllerHardwareConstants.HeaterNames[i]].Add(new VoltageData() {
                    Voltage = data.Voltages[i],
                    TimeHrs = (double)data.ElapsedSeconds/ 3600,
                });
            }
            return InvokeAsync(StateHasChanged);
        } else {
            if (this._running) {
                this._running = false;
                this._tempPlotData?.Clear();
                this._currentPlotData?.Clear();
                this._voltagePlotData?.Clear();
            }
            return InvokeAsync(StateHasChanged);
        }
    }

    private void InitPlotOptions(StationSerialData data) {
        
        this._currentPlotOptions.YAxisMax = data.CurrentSetPoint + 5;
        this._currentPlotOptions.YAxisMin = data.CurrentSetPoint - 5;
        this._currentPlotOptions.YAxisStep = 1;
        
        this._currentPlotOptions.XAxisMax=data.CurrentSetPoint==150 ? 7:20;
        this._currentPlotOptions.XAxisStep=data.CurrentSetPoint==150 ? 1:2;
        this._currentPlotOptions.XAxisMin = 0;
        
        
        this._tempPlotOptions.YAxisMax = 90;
        this._tempPlotOptions.YAxisMin = 20;
        this._tempPlotOptions.YAxisStep = 10;
        
        this._tempPlotOptions.XAxisMax=data.CurrentSetPoint==150 ? 7:20;
        this._tempPlotOptions.XAxisMin = 0;
        this._tempPlotOptions.XAxisStep=data.CurrentSetPoint==150 ? 1:2;
        
        this._voltagePlotOptions.YAxisMax = 105;
        this._voltagePlotOptions.YAxisMin = 35;
        this._voltagePlotOptions.YAxisStep = 10;
        
        this._voltagePlotOptions.XAxisMax=data.CurrentSetPoint==150 ? 7:20;
        this._voltagePlotOptions.XAxisStep=data.CurrentSetPoint==150 ? 1:2;
        this._voltagePlotOptions.XAxisMin = 0;
        

        
    }

}