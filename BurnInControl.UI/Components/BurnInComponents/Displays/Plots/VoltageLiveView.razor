@using BurnInControl.UI.Data
@if (this.VoltageData == null) {
<p>Loading...</p>
} else {
<RadzenChart Style="height: 400px;">
    @foreach (var voltageData in this.VoltageData) {
    <RadzenLineSeries Smooth="false"
                      Data="@voltageData.Value"
                      CategoryProperty="TimeHrs"
                      Title="@voltageData.Key"
                      LineType="LineType.Solid"
                      ValueProperty="Voltage">
        <RadzenMarkers Visible="true" MarkerType="MarkerType.Circle"/>
        <RadzenSeriesDataLabels Visible="false"/>
    </RadzenLineSeries>
    }
    <RadzenCategoryAxis Min="@this.PlotAxisOptions.XAxisMin"
                        Max="@this.PlotAxisOptions.XAxisMax"
                        Step="@this.PlotAxisOptions.XAxisStep"
                        LineType="LineType.Solid">
        <RadzenAxisTitle Text="@XAxisName"/>
        <RadzenGridLines Visible="true" StrokeWidth="3"/>
    </RadzenCategoryAxis>
    <RadzenValueAxis Min="@this.PlotAxisOptions.YAxisMin"
                     Max="@this.PlotAxisOptions.YAxisMax"
                     Step="@this.PlotAxisOptions.YAxisStep">
        <RadzenGridLines Visible="true" StrokeWidth="3"/>
        <RadzenAxisTitle Text="@YAxisName"/>
    </RadzenValueAxis>
</RadzenChart>
}

@code {
[Parameter] public Dictionary<string,List<VoltageData>>? VoltageData { get; set; }
[Parameter] public PlotAxisOptions PlotAxisOptions { get; set; }
[Parameter] public string? YAxisName { get; set; }
[Parameter] public string? XAxisName { get; set; }

}