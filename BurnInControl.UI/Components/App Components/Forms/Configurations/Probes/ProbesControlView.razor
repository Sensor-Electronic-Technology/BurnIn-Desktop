@using BurnInControl.Data.ComponentConfiguration.ProbeController
@inject ConsoleWriter _consoleWriter

<RadzenFieldset Text="Probe Controller Configuration">
    <RadzenTabs RenderMode="TabRenderMode.Client" TabPosition="Radzen.TabPosition.Left">
        <Tabs>
            <RadzenTabsItem Text="Probes 1-3" Selected="false">
                <RadzenStack Orientation="Orientation.Horizontal">
                    @for (int i = 0; i < (ControllerHardwareConstants.PROBE_COUNT / 2); i++) {
                        <ProbeView ProbeConfig="@this.ProbeController.ProbeConfigurations[i]"
                                   ProbeConfigChanged="@((config) => { this.ProbeController.ProbeConfigurations[config.ProbeNumber - 1] = config; })"/>
                    }
                </RadzenStack>
            </RadzenTabsItem>
            <RadzenTabsItem Text="Probes 4-6">
                <RadzenStack Orientation="Orientation.Horizontal">
                    @for (int i = 3; i < ControllerHardwareConstants.PROBE_COUNT; i++) {
                        <ProbeView ProbeConfig="@this.ProbeController.ProbeConfigurations[i]"
                                   ProbeConfigChanged="@((config) => { this.ProbeController.ProbeConfigurations[config.ProbeNumber - 1] = config; })"/>
                    }
                </RadzenStack>
            </RadzenTabsItem>
            
        </Tabs>
    </RadzenTabs>
    <RadzenButton Text="Save" Click="@this.SaveConfig"/>
</RadzenFieldset>


@code {
    private ProbeControllerConfig ProbeController = new ProbeControllerConfig();
    
    private Task SaveConfig() {
        this._consoleWriter.LogMessage($"Sensor Voltage Pin: {ProbeController.ProbeConfigurations[0].VoltageSensorConfig.Pin}");
        return Task.CompletedTask;
    }
}