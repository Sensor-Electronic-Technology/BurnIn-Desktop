@using BurnInControl.Data.ComponentConfiguration.HeaterController

<RadzenFieldset Text="PID Configuration" Style="width: fit-content">
    <RadzenStack AlignItems="AlignItems.Center" Gap="1rem" Style="width: fit-content">
        <RadzenFieldset Text="PID Parameters"
                        Style="width: fit-content">
            <RadzenStack Orientation="Orientation.Vertical"
                         AlignItems="AlignItems.Center"
                         JustifyContent="JustifyContent.Center">
                <RadzenStack Orientation="Orientation.Horizontal"
                             JustifyContent="JustifyContent.Center"
                             AlignItems="AlignItems.Center">
                    <ExponentialInput Label="Kp"
                                      Value="@this.PidConfig.Kp"
                                      ValueChanged="@(async Task (val) => { this.PidConfig.Kp = val; await this.PidConfigChanged.InvokeAsync(this.PidConfig); })"/>
                    <ExponentialInput Label="Ki"
                                      Value="@this.PidConfig.Ki"
                                      ValueChanged="@(async Task (val) => { this.PidConfig.Ki = val; await this.PidConfigChanged.InvokeAsync(this.PidConfig); })"/>
                </RadzenStack>
                <RadzenRow>
                    <ExponentialInput Label="Kd"
                                      Value="@this.PidConfig.Kd"
                                      ValueChanged="@(async Task (val) => { this.PidConfig.Kd = val; await this.PidConfigChanged.InvokeAsync(this.PidConfig); })"/>
                </RadzenRow>

            </RadzenStack>

        </RadzenFieldset>
        <RadzenFieldset Text="Window Size ms">
            <RadzenNumeric TValue="ulong" 
                           Step="100" 
                           Name="WindowSizeMs"
                           Value="@this.PidConfig.WindowSizeMs"
                           ValueChanged="@(async Task (val) => { this.PidConfig.WindowSizeMs = val; await this.PidConfigChanged.InvokeAsync(this.PidConfig); })"/>
        </RadzenFieldset>
        @*<RadzenStack Orientation="Orientation.Horizontal"
                     AlignItems="AlignItems.Center"
                     JustifyContent="JustifyContent.Center">
            <RadzenButton Text="Submit Changes"
                          
                          Click="@(() => PidConfigChanged.InvokeAsync(PidConfig))"/>
            <RadzenButton Text="Revert"
                          Click="RevertHandler"
                          Disabled="@(!this._changed)"/>
        </RadzenStack>*@
    </RadzenStack>

</RadzenFieldset>


@code {
    [Parameter]
    public PidConfiguration PidConfig { get; set; }
    
    [Parameter]
    public EventCallback<PidConfiguration> PidConfigChanged { get; set; }
    
}