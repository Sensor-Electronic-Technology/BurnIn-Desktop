@using BurnInControl.Data.ComponentConfiguration.HeaterController
@using BurnInControl.UI.Services
@inject DialogService DialogService
@inject ConsoleWriter _consoleWriter

@if(this.HeaterControllerConfig == null) {
    <p>Loading...</p>
} else {
    <RadzenTemplateForm Data="@this.HeaterControllerConfig">
        <RadzenStack Orientation="Orientation.Horizontal" 
                     Wrap="FlexWrap.Wrap" 
                     AlignItems="AlignItems.Center"
                     JustifyContent="JustifyContent.Center">
            @for (int i = 0; i < ControllerHardwareConstants.HEATER_COUNT; i++) {
                <HeaterConfigView Label="@GetLabel(i)"
                                  HeaterConfig="@this.HeaterControllerConfig.HeaterConfigurations[i]"
                                  HeaterConfigChanged="@this.ConfigChangedHandler"/>
            }
        </RadzenStack>
    </RadzenTemplateForm>
}


@code {
    [Parameter]
    public HeaterControllerConfig? HeaterControllerConfig { get; set; } = new();

    private async Task ConfigChangedHandler() {
        this._consoleWriter.LogMessage("Configuration Changed",AlertStyle.Light);
        //await this.DialogService.Alert("Configuration Changed", "Configuration Changed"); 
    }
    
    private string GetLabel(int index) {
        if(index==0) {
            return "Left Heater Configuration";
        }else if (index == 1) {
            return "Middle Heater Configuration";
        } else {
            return "Right Heater Configuration";
        }
    }
    
    
}