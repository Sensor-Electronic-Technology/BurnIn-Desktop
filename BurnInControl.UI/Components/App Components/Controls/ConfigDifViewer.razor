@using System.Text.Json
@using BlazorMonaco.Editor
@using BurnInControl.Data.ComponentConfiguration
@using BurnInControl.Data.ComponentConfiguration.ProbeController
@using BurnInControl.Data.ComponentConfiguration.StationController
@using BurnInControl.Data.ComponentConfiguration.HeaterController
@inject IJSRuntime jsRuntime
@typeparam TConfig where TConfig : IBurnStationConfiguration

<StandaloneDiffEditor @ref="_diffEditor" Id="sample-diff-editor-123" ConstructionOptions="DiffEditorConstructionOptions" OnDidInit="EditorOnDidInit" />

@code {
    private StandaloneDiffEditor _diffEditor = null!;
    
    [Parameter] public TConfig ServerConfig { get; set; }
    [Parameter] public TConfig ControllerConfig { get; set; } 
    
    private StandaloneDiffEditorConstructionOptions DiffEditorConstructionOptions(StandaloneDiffEditor editor) {
        return new StandaloneDiffEditorConstructionOptions {
            OriginalEditable = true
        };
    }
    
    private async Task EditorOnDidInit() {
        // Get or create the original model
        string json="";
        switch (ServerConfig) {
            case HeaterControllerConfig heaterControllerConfig: {
                json=JsonSerializer.Serialize(heaterControllerConfig,new JsonSerializerOptions() {
                    WriteIndented = true
                });
                break;
            }
            case ProbeControllerConfig probeControllerConfig: {
                JsonSerializer.Serialize(probeControllerConfig, new JsonSerializerOptions() { WriteIndented = true });
                break;
            }
            case StationConfiguration stationConfiguration: {
                JsonSerializer.Serialize(stationConfiguration, new JsonSerializerOptions() { WriteIndented = true });
                break;
            }
        }
        TextModel original_model = await BlazorMonaco.Editor.Global.GetModel(jsRuntime, "sample-diff-editor-originalModel");
        if (original_model == null) {
            original_model = await BlazorMonaco.Editor.Global.CreateModel(jsRuntime, json, "javascript", "sample-diff-editor-originalModel");
        }

        // Get or create the modified model
        TextModel modified_model = await BlazorMonaco.Editor.Global.GetModel(jsRuntime, "sample-diff-editor-modifiedModel");
        if (modified_model == null) {
            modified_model = await BlazorMonaco.Editor.Global.CreateModel(jsRuntime, json, "javascript", "sample-diff-editor-modifiedModel");
        }

        // Set the editor model
        await _diffEditor.SetModel(new DiffEditorModel {
            Original = original_model,
            Modified = modified_model
        });
    }
}